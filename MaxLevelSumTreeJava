/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
  
class Solution {
    public int maxLevelSum(TreeNode root) {
        
        int res = root.val; // initially store max value as root
        int ans = 1;  // ans would be first level(root level)
        int level = 0;  // variable to update level while traversing
        
        Queue<TreeNode> q = new LinkedList<>();  // Queue to do level order traversal.
        
        q.add(root);
        
        while(!q.isEmpty()){
        
            level++;  // each iteration increase the level
            
            int n = q.size();
            int curr_sum = 0;
            int flag = 0;
            
            for(int i=0;i<n;i++){
                
                TreeNode temp = q.remove();                
                
                if(temp.left!=null){
                    q.add(temp.left);
                    curr_sum+=temp.left.val;
                    flag = 1;
                } 
                
                if(temp.right!=null){
                    q.add(temp.right);
                    curr_sum+=temp.right.val;
                    flag = 1;
                }
                
            }
            
            if(curr_sum > res && flag==1){
                 res = curr_sum;
                 ans = level+1;
            }
        }
        return ans;
    }
}
