/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public int max(int nums[],int start,int end){
    
        int maxi = Integer.MIN_VALUE;
        int res = 0;
        
        for(int i=start;i<=end;i++){
            if(nums[i]>maxi){
                maxi = nums[i];
                res = i;
            } 
        }
        
        return res;
    }
    public TreeNode solve(int nums[],int start,int end){
        if(start<=end){
            int idx = max(nums,start,end);
            
            TreeNode root = new TreeNode(nums[idx]);
            
            root.left = solve(nums,start,idx-1);
            root.right = solve(nums,idx+1,end);
            
            return root;
        }
        return null;
    }
    public TreeNode constructMaximumBinaryTree(int[] nums) {
    
        TreeNode root = solve(nums,0,nums.length-1);
        
        return root;
    }
}
