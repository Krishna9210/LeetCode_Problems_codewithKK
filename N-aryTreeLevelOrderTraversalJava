/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        
        List<List<Integer>> al = new ArrayList<>();
        
        if(root==null) return al;
        
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        
        while(!q.isEmpty()){
            
            List<Integer> temp = new ArrayList<>();
            int n = q.size();
            
            for(int i=0;i<n;i++){
                
                Node t = q.remove();
                temp.add(t.val);
                
                for(int j=0;j<t.children.size();j++){
                
                    if(t.children.get(j)!=null)
                        q.add(t.children.get(j));
                        
                }
            }
            
            al.add(temp);
            
        }
        return al;
    }
}
